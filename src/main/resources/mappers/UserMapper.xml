<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhu.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.zhu.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="profile_pic" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="fans" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="following" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rank" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="scores" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, gender, phone, description, profile_pic, fans, following, 
    rank, scores, question, answer, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhu.pojo.User" >
    insert into user (id, username, password, 
      gender, phone, description, 
      profile_pic, fans, following, 
      rank, scores, question, 
      answer, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{profilePic,jdbcType=VARCHAR}, #{fans,jdbcType=INTEGER}, #{following,jdbcType=INTEGER}, 
      #{rank,jdbcType=INTEGER}, #{scores,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, now(),now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhu.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="profilePic != null" >
        profile_pic,
      </if>
      <if test="fans != null" >
        fans,
      </if>
      <if test="following != null" >
        following,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="scores != null" >
        scores,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="profilePic != null" >
        #{profilePic,jdbcType=VARCHAR},
      </if>
      <if test="fans != null" >
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        #{following,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="scores != null" >
        #{scores,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhu.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="profilePic != null" >
        profile_pic = #{profilePic,jdbcType=VARCHAR},
      </if>
      <if test="fans != null" >
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="scores != null" >
        scores = #{scores,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = now(),
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhu.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      profile_pic = #{profilePic,jdbcType=VARCHAR},
      fans = #{fans,jdbcType=INTEGER},
      following = #{following,jdbcType=INTEGER},
      rank = #{rank,jdbcType=INTEGER},
      scores = #{scores,jdbcType=INTEGER},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      create_time = now(),
      update_time =now()
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--  自己-->
  <select id="checkUsername" parameterType="string" resultType="java.lang.Integer">
    select count(1)
    from user
    where username=#{username}
  </select>
<!--  -->
  <select id="selectLogin" resultType="com.zhu.pojo.User" parameterType="map">
    select
    <include refid="Base_Column_List"/>
    from
    user
    where
    username=#{username}
    and password=#{password}
  </select>
<!--  -->
<select id="checkPhone" parameterType="string" resultType="int">
  select count(1)
  from user
  where phone=#{phone}
</select>
<!--  -->
  <select id="checkPhoneById" parameterType="map" resultType="int">
    select count(1)
    from user
    where phone=#{phone}
    and id!=#{id}
  </select>
<!--  -->
  <select id="checkPassword" resultType="int" parameterType="map">
    select count(1)
    from user
    where id =#{userId}
    and password =#{password}
  </select>
<!--  -->
  <select id="selectQuestionByUsername" parameterType="string" resultType="string">
    select
    question
    from user
    where username=#{username}
  </select>
<!--  -->
  <select id="checkAnswer" parameterType="map" resultType="int">
    select count(1)
    from user
    where username=#{username}
    and question=#{question}
    and answer=#{answer}
  </select>
<!--  -->
  <update id="updatePasswordByUsername" parameterType="map">
    update user
    set password=#{password} , update_time=now()
    where username=#{username}
  </update>
<!--  -->
  <update id="changeProfilePic"  parameterType="map" >
    update user
    set profile_pic=#{profile_picture}
    where id=#{userId}
  </update>
<!--  -->
  <select id="checkUserById" parameterType="int" resultType="int">
    select count(1)
    from user
    where id=#{id}
  </select>
<!---->
  <select id="selectUserByName" resultMap="com.zhu.dao.UserMapper.BaseResultMap" parameterType="string">
    select
    <include refid="Base_Column_List"/>
    from user
    where username like "%${username}%"
  </select>
</mapper>